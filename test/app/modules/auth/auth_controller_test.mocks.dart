// Mocks generated by Mockito 5.0.15 from annotations
// in system_maua_front/test/app/modules/auth/auth_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:system_maua_front/app/modules/auth/repositories/auth_repository_interface.dart'
    as _i2;
import 'package:system_maua_front/app/modules/auth/repositories/secure_storage_interface.dart'
    as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [IAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthRepository extends _i1.Mock implements _i2.IAuthRepository {
  MockIAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> loginWithEmail(String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#loginWithEmail, [email, password]),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String> refreshToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#refreshToken, [token]),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ISecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockISecureStorage extends _i1.Mock implements _i4.ISecureStorage {
  MockISecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#saveToken, [token]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<String?> getToken() =>
      (super.noSuchMethod(Invocation.method(#getToken, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
  @override
  String toString() => super.toString();
}
